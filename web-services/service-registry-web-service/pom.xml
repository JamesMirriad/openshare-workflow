<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<parent>
		<groupId>com.openshare</groupId>
		<artifactId>web-services</artifactId>
		<version>0.6.0-SNAPSHOT</version>
	</parent>
	
	<name>Openshare Service Registry</name>
	<artifactId>service-registry</artifactId>
	<packaging>war</packaging>

<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<integration.test.skip>true</integration.test.skip>
		<compiler.version>1.7</compiler.version>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<!-- workaround because of http://jira.codehaus.org/browse/MRESOURCES-99 -->
		<maven_build_timestamp>${maven.build.timestamp}</maven_build_timestamp>
		<!--dependency properties-->
		<org.springframework.version>3.0.3.RELEASE</org.springframework.version>
		<com.google.gwt.version>2.3.0</com.google.gwt.version>
		<org.codehaus.groovy.version>2.1.3</org.codehaus.groovy.version>
		<org.apache.tomcat.version>7.0.42</org.apache.tomcat.version>
		<log4j.version>1.2.17</log4j.version>
		<junit.version>4.11</junit.version>
		<mysql.driver.version>5.1.27</mysql.driver.version>
		<org.hibernate.version>4.2.6.Final</org.hibernate.version>
	</properties>
	
	<dependencies>
		<!-- mirriad modules-->
		<!--hibernate / jpa-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<!--other-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- These are the Jersey dependencies -->
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>1.17.1</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-core</artifactId>
		    <version>1.17.1</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-servlet</artifactId>
		    <version>1.17.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.grizzly</groupId>
			<artifactId>grizzly-servlet-webserver</artifactId>
			<version>1.9.18-i</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly</artifactId>
			<version>1.4</version>
		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.17.1</version>
		</dependency>
					
		<!--logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope>
		</dependency>
		<!-- swagger REST API generation, untill maven swagger plugin is updated, we have to use 1.2.5 :( -->
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jaxrs_2.10</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	
	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>
		<repository>
			<id>utils01.mirriad.corp</id>
			<name>utils01.mirriad.corp-releases</name>
			<url>http://utils01.mirriad.corp:8081/artifactory/ext-release-local</url>
		</repository>
		<repository>
			<id>lambdaj</id>
			<name>Lambdaj Repository</name>
			<url>http://lambdaj.googlecode.com/svn/repo/releases/</url>
		</repository>
		<repository>
			<id>pentaho</id>
			<name>Pentaho Repository</name>
			<url>http://repo.pentaho.org/artifactory/repo/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</pluginRepository>
		<pluginRepository>
			<id>utils01.mirriad.corp</id>
			<name>utils01.mirriad.corp-releases</name>
			<url>http://utils01.mirriad.corp:8081/artifactory/ext-release-local</url>
		</pluginRepository>
	</pluginRepositories>
</project>
